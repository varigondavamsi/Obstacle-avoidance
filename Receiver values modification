/* Vamsi Krishna, June, 2018
different RC channels are defined for the receiver inputs*/ 
#include <EnableInterrupt.h>
#define RC_NUM_CHANNELS  4
#define RC_CH1  0
#define RC_CH2  1
#define RC_CH3  2
#define RC_CH4  3
#define RC_CH1_INPUT  A0
#define RC_CH2_INPUT  A1
#define RC_CH3_INPUT  A2
#define RC_CH4_INPUT  A3
uint16_t rc_values[RC_NUM_CHANNELS];
uint32_t rc_start[RC_NUM_CHANNELS];
volatile uint16_t rc_shared[RC_NUM_CHANNELS];
int pin = 11;
int trigPin = 2;
int echoPin = 3;
int trigPin2 = 4;
int echoPin2 = 5;
int trigPin3 = 7;
int echoPin3 = 6;
int trigPin4 = 8;
int echoPin4 = 9;
int duration1, duration2, duration3, duration4, distance, distance2, distance3, distance4;

void rc_read_values() {
  noInterrupts();
  memcpy(rc_values, (const void *)rc_shared, sizeof(rc_shared));
  interrupts();
}

void calc_input(uint8_t channel, uint8_t input_pin) {
  if (digitalRead(input_pin) == HIGH) {
    rc_start[channel] = micros();
  } else {
    uint16_t rc_compare = (uint16_t)(micros() - rc_start[channel]);
    rc_shared[channel] = rc_compare;
  }
}

void calc_ch1() {
  calc_input(RC_CH1, RC_CH1_INPUT);
}
void calc_ch2() {
  calc_input(RC_CH2, RC_CH2_INPUT);
}
void calc_ch3() {
  calc_input(RC_CH3, RC_CH3_INPUT);
}
void calc_ch4() {
  calc_input(RC_CH4, RC_CH4_INPUT);
}

void setup() {
  Serial.begin(57600);
  pinMode(RC_CH1_INPUT, INPUT);
  pinMode(RC_CH2_INPUT, INPUT);
  pinMode(RC_CH3_INPUT, INPUT);
  pinMode(RC_CH4_INPUT, INPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);
  pinMode(trigPin3, OUTPUT);
  pinMode(echoPin3, INPUT);
  pinMode(pin, OUTPUT);
   pinMode(trigPin4, OUTPUT);
  pinMode(echoPin4, INPUT);
  enableInterrupt(RC_CH1_INPUT, calc_ch1, CHANGE);
  enableInterrupt(RC_CH2_INPUT, calc_ch2, CHANGE);
  enableInterrupt(RC_CH3_INPUT, calc_ch3, CHANGE);
  enableInterrupt(RC_CH4_INPUT, calc_ch4, CHANGE);

}

void loop() {  
  rc_read_values();

  Serial.print("roll:"); Serial.print(rc_values[RC_CH1]); Serial.print("\t");
  Serial.print("pitch:"); Serial.print(rc_values[RC_CH2]); Serial.print("\t");
  Serial.print("throttle:"); Serial.print(rc_values[RC_CH3]); Serial.print("\t");
  Serial.print("yaw:"); Serial.println(rc_values[RC_CH4]);
  digitalWrite (trigPin, HIGH);
  digitalWrite (trigPin2, HIGH);
  digitalWrite (trigPin3, HIGH);
  digitalWrite (trigPin4, HIGH);
  delayMicroseconds (10);
  digitalWrite (trigPin, LOW);
  duration1 = pulseIn (echoPin, HIGH);
  distance = (duration1 / 2) / 29.1;
  digitalWrite (trigPin2, LOW);
  duration2 = pulseIn (echoPin2, HIGH);
  distance2 = (duration2 / 2) / 29.1;
  digitalWrite (trigPin3, LOW);
  duration3 = pulseIn (echoPin3, HIGH);
  distance3 = (duration3 / 2) / 29.1;
  digitalWrite (trigPin4, LOW);
  duration4 = pulseIn (echoPin4, HIGH);
  distance4 = (duration4 / 2) / 29.1;
  Serial.print(distance);
  Serial.print("cm1");
  Serial.print(distance2);
  Serial.print("cm2");
  Serial.print(distance3);
  Serial.print("cm3");
  Serial.print(distance4);
  Serial.print("cm4");
  Serial.println();
  digitalWrite(13, HIGH);
  delayMicroseconds(rc_values[RC_CH3]);
  digitalWrite(13, LOW);
  delayMicroseconds(2000 - rc_values[RC_CH3]);
}
